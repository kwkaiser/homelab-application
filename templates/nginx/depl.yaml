apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx
        app.kubernetes.io/name: nginx
    spec: 
      # Load balancer always run on head
      nodeSelector:
        head: "true"

      volumes: 
        {{- range $name := list "nginx-certificate-key" "nginx-certificate" }}
        - name: {{$name}}
          secret:
            secretName: {{ regexReplaceAll "-" $name "." }}
            items:
              - key: value
                path: value
        {{- end }}

        - name: nginx-configs
          configMap:
            name: nginx-configs
            items: 
            {{- range $path, $content := .Files.Glob "config/nginx**" }}
            {{- $cleanedPath := regexReplaceAll "\\/" (trimPrefix "config/nginx/" $path ) "_" }}
              - key: {{ $cleanedPath }}
                path: {{ $cleanedPath }} 
            {{- end }}

      containers:
        - name: nginx
          image: {{ .Values.nginx.repository }}:{{ .Values.nginx.tag }}
          ports:
            - containerPort: 80
            - containerPort: 443

          volumeMounts:
            - name: nginx-certificate
              mountPath: /etc/nginx/keys/{{ .Values.domainName }}.{{ .Values.tld }}.crt
              subPath: value
              readOnly: true
            - name: nginx-certificate-key
              mountPath: /etc/nginx/keys/{{ .Values.domainName }}.{{ .Values.tld }}.key
              subPath: value
              readOnly: true
            
          {{- range $path, $content := .Files.Glob "config/nginx**" }}
          {{- $cleanedPath := regexReplaceAll "\\/" (trimPrefix "config/nginx/" $path ) "_" }}
            - name: nginx-configs
              mountPath: {{ printf "%s%s" "/etc/nginx/" (regexReplaceAll "_"  $cleanedPath "/") }} 
              subPath: {{ $cleanedPath }}
              readOnly: true
          {{- end }} 
      initContainers:
        {{ include "waitFor" (dict "Name" "authelia" "Port" 80) }}
        {{ include "waitFor" (dict "Name" "ldap-user-manager" "Port" 80) }}
        {{ include "waitFor" (dict "Name" "jellyfin" "Port" 80) }}
        {{ include "waitFor" (dict "Name" "calibre" "Port" 80) }}
        {{ include "waitFor" (dict "Name" "gitea" "Port" 80) }}
        {{ include "waitFor" (dict "Name" "piracy" "Port" 8080) }}
        {{ include "waitFor" (dict "Name" "piracy" "Port" 7878) }}
        {{ include "waitFor" (dict "Name" "piracy" "Port" 8989) }}
        {{ include "waitFor" (dict "Name" "piracy" "Port" 9696) }}
        {{ include "waitFor" (dict "Name" "piracy" "Port" 7474) }}
      