name: Deploy

on:
  push:
    branches:
      - main

jobs:
  code-quality:
    name: Code quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install helm
        run: |
          curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | tee /usr/share/keyrings/helm.gpg > /dev/null
          apt-get install apt-transport-https --yes
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | tee /etc/apt/sources.list.d/helm-stable-debian.list
          apt-get update
          apt-get install helm

      - name: Lint helm chart
        run: helm lint .

      - name: Install kubeconform
        run: |
          wget https://github.com/yannh/kubeconform/releases/download/v0.6.4/kubeconform-linux-amd64.tar.gz
          tar xf kubeconform-linux-amd64.tar.gz
          cp kubeconform /usr/local/bin

      - name: Generate templated chart
        run: helm dependency build && make template env=prod

      - name: Lint templated chart
        run: kubeconform ./template.yaml

  release:
    name: Release
    needs: code-quality
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install helm
        run: |
          curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | tee /usr/share/keyrings/helm.gpg > /dev/null
          apt-get install apt-transport-https --yes
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | tee /etc/apt/sources.list.d/helm-stable-debian.list
          apt-get update
          apt-get install helm

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" 
          install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          rm ./kubectl

      - name: Run helm command
        run: |
          mkdir $HOME/.kube
          echo $KUBE_CONFIG > $HOME/.kube/config
          make redeploy-prod
        env:
          PROD: 'true'
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}